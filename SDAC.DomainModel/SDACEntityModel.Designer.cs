//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SDACModel", "FK_rel1", "AggregateFlag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SDAC.DomainModel.AggregateFlag), "FlagAggregateFlag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SDAC.DomainModel.FlagAggregateFlag), true)]
[assembly: EdmRelationshipAttribute("SDACModel", "FK_Condition", "Condition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SDAC.DomainModel.Condition), "Flag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SDAC.DomainModel.Flag), true)]
[assembly: EdmRelationshipAttribute("SDACModel", "FK_DataElementId", "DataElement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SDAC.DomainModel.DataElement), "Flag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SDAC.DomainModel.Flag), true)]
[assembly: EdmRelationshipAttribute("SDACModel", "FK_rel2", "Flag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SDAC.DomainModel.Flag), "FlagAggregateFlag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SDAC.DomainModel.FlagAggregateFlag), true)]
[assembly: EdmRelationshipAttribute("SDACModel", "FK_UserFlagAssociation_Flag", "Flag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SDAC.DomainModel.Flag), "UserFlagAssociation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SDAC.DomainModel.UserFlagAssociation), true)]

#endregion

namespace SDAC.DomainModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SLC_SDACEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SLC_SDACEntities object using the connection string found in the 'SLC_SDACEntities' section of the application configuration file.
        /// </summary>
        public SLC_SDACEntities() : base("name=SLC_SDACEntities", "SLC_SDACEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SLC_SDACEntities object.
        /// </summary>
        public SLC_SDACEntities(string connectionString) : base(connectionString, "SLC_SDACEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SLC_SDACEntities object.
        /// </summary>
        public SLC_SDACEntities(EntityConnection connection) : base(connection, "SLC_SDACEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AggregateFlag> AggregateFlags
        {
            get
            {
                if ((_AggregateFlags == null))
                {
                    _AggregateFlags = base.CreateObjectSet<AggregateFlag>("AggregateFlags");
                }
                return _AggregateFlags;
            }
        }
        private ObjectSet<AggregateFlag> _AggregateFlags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Condition> Conditions
        {
            get
            {
                if ((_Conditions == null))
                {
                    _Conditions = base.CreateObjectSet<Condition>("Conditions");
                }
                return _Conditions;
            }
        }
        private ObjectSet<Condition> _Conditions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataElement> DataElements
        {
            get
            {
                if ((_DataElements == null))
                {
                    _DataElements = base.CreateObjectSet<DataElement>("DataElements");
                }
                return _DataElements;
            }
        }
        private ObjectSet<DataElement> _DataElements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ErrorLog> ErrorLogs
        {
            get
            {
                if ((_ErrorLogs == null))
                {
                    _ErrorLogs = base.CreateObjectSet<ErrorLog>("ErrorLogs");
                }
                return _ErrorLogs;
            }
        }
        private ObjectSet<ErrorLog> _ErrorLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Flag> Flags
        {
            get
            {
                if ((_Flags == null))
                {
                    _Flags = base.CreateObjectSet<Flag>("Flags");
                }
                return _Flags;
            }
        }
        private ObjectSet<Flag> _Flags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FlagAggregateFlag> FlagAggregateFlags
        {
            get
            {
                if ((_FlagAggregateFlags == null))
                {
                    _FlagAggregateFlags = base.CreateObjectSet<FlagAggregateFlag>("FlagAggregateFlags");
                }
                return _FlagAggregateFlags;
            }
        }
        private ObjectSet<FlagAggregateFlag> _FlagAggregateFlags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PublicFavorite> PublicFavorites
        {
            get
            {
                if ((_PublicFavorites == null))
                {
                    _PublicFavorites = base.CreateObjectSet<PublicFavorite>("PublicFavorites");
                }
                return _PublicFavorites;
            }
        }
        private ObjectSet<PublicFavorite> _PublicFavorites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserFlagAssociation> UserFlagAssociations
        {
            get
            {
                if ((_UserFlagAssociations == null))
                {
                    _UserFlagAssociations = base.CreateObjectSet<UserFlagAssociation>("UserFlagAssociations");
                }
                return _UserFlagAssociations;
            }
        }
        private ObjectSet<UserFlagAssociation> _UserFlagAssociations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLog> UserLogs
        {
            get
            {
                if ((_UserLogs == null))
                {
                    _UserLogs = base.CreateObjectSet<UserLog>("UserLogs");
                }
                return _UserLogs;
            }
        }
        private ObjectSet<UserLog> _UserLogs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AggregateFlags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAggregateFlags(AggregateFlag aggregateFlag)
        {
            base.AddObject("AggregateFlags", aggregateFlag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Conditions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConditions(Condition condition)
        {
            base.AddObject("Conditions", condition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataElements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataElements(DataElement dataElement)
        {
            base.AddObject("DataElements", dataElement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ErrorLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToErrorLogs(ErrorLog errorLog)
        {
            base.AddObject("ErrorLogs", errorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Flags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlags(Flag flag)
        {
            base.AddObject("Flags", flag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FlagAggregateFlags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlagAggregateFlags(FlagAggregateFlag flagAggregateFlag)
        {
            base.AddObject("FlagAggregateFlags", flagAggregateFlag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PublicFavorites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublicFavorites(PublicFavorite publicFavorite)
        {
            base.AddObject("PublicFavorites", publicFavorite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserFlagAssociations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserFlagAssociations(UserFlagAssociation userFlagAssociation)
        {
            base.AddObject("UserFlagAssociations", userFlagAssociation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLogs(UserLog userLog)
        {
            base.AddObject("UserLogs", userLog);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SDACModel", Name="AggregateFlag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AggregateFlag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AggregateFlag object.
        /// </summary>
        /// <param name="aggregateFlagId">Initial value of the AggregateFlagId property.</param>
        /// <param name="aggregateFlagName">Initial value of the AggregateFlagName property.</param>
        /// <param name="aggregateFlagDescription">Initial value of the AggregateFlagDescription property.</param>
        /// <param name="isPublic">Initial value of the IsPublic property.</param>
        /// <param name="isFavorite">Initial value of the IsFavorite property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static AggregateFlag CreateAggregateFlag(global::System.Int32 aggregateFlagId, global::System.String aggregateFlagName, global::System.String aggregateFlagDescription, global::System.Boolean isPublic, global::System.Boolean isFavorite, global::System.String userId, global::System.String createdBy, global::System.DateTime createdDate, global::System.String modifiedBy, global::System.DateTime modifiedDate)
        {
            AggregateFlag aggregateFlag = new AggregateFlag();
            aggregateFlag.AggregateFlagId = aggregateFlagId;
            aggregateFlag.AggregateFlagName = aggregateFlagName;
            aggregateFlag.AggregateFlagDescription = aggregateFlagDescription;
            aggregateFlag.IsPublic = isPublic;
            aggregateFlag.IsFavorite = isFavorite;
            aggregateFlag.UserId = userId;
            aggregateFlag.CreatedBy = createdBy;
            aggregateFlag.CreatedDate = createdDate;
            aggregateFlag.ModifiedBy = modifiedBy;
            aggregateFlag.ModifiedDate = modifiedDate;
            return aggregateFlag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggregateFlagId
        {
            get
            {
                return _AggregateFlagId;
            }
            set
            {
                if (_AggregateFlagId != value)
                {
                    OnAggregateFlagIdChanging(value);
                    ReportPropertyChanging("AggregateFlagId");
                    _AggregateFlagId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggregateFlagId");
                    OnAggregateFlagIdChanged();
                }
            }
        }
        private global::System.Int32 _AggregateFlagId;
        partial void OnAggregateFlagIdChanging(global::System.Int32 value);
        partial void OnAggregateFlagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AggregateFlagName
        {
            get
            {
                return _AggregateFlagName;
            }
            set
            {
                OnAggregateFlagNameChanging(value);
                ReportPropertyChanging("AggregateFlagName");
                _AggregateFlagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AggregateFlagName");
                OnAggregateFlagNameChanged();
            }
        }
        private global::System.String _AggregateFlagName;
        partial void OnAggregateFlagNameChanging(global::System.String value);
        partial void OnAggregateFlagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AggregateFlagDescription
        {
            get
            {
                return _AggregateFlagDescription;
            }
            set
            {
                OnAggregateFlagDescriptionChanging(value);
                ReportPropertyChanging("AggregateFlagDescription");
                _AggregateFlagDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AggregateFlagDescription");
                OnAggregateFlagDescriptionChanged();
            }
        }
        private global::System.String _AggregateFlagDescription;
        partial void OnAggregateFlagDescriptionChanging(global::System.String value);
        partial void OnAggregateFlagDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private global::System.Boolean _IsPublic;
        partial void OnIsPublicChanging(global::System.Boolean value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFavorite
        {
            get
            {
                return _IsFavorite;
            }
            set
            {
                OnIsFavoriteChanging(value);
                ReportPropertyChanging("IsFavorite");
                _IsFavorite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFavorite");
                OnIsFavoriteChanged();
            }
        }
        private global::System.Boolean _IsFavorite;
        partial void OnIsFavoriteChanging(global::System.Boolean value);
        partial void OnIsFavoriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDelete;
        partial void OnIsDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SDACModel", "FK_rel1", "FlagAggregateFlag")]
        public EntityCollection<FlagAggregateFlag> FlagAggregateFlags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlagAggregateFlag>("SDACModel.FK_rel1", "FlagAggregateFlag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlagAggregateFlag>("SDACModel.FK_rel1", "FlagAggregateFlag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SDACModel", Name="Condition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Condition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Condition object.
        /// </summary>
        /// <param name="conditionId">Initial value of the ConditionId property.</param>
        /// <param name="conditionName">Initial value of the ConditionName property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static Condition CreateCondition(global::System.Int32 conditionId, global::System.String conditionName, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            Condition condition = new Condition();
            condition.ConditionId = conditionId;
            condition.ConditionName = conditionName;
            condition.CreatedDate = createdDate;
            condition.ModifiedDate = modifiedDate;
            return condition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConditionId
        {
            get
            {
                return _ConditionId;
            }
            set
            {
                if (_ConditionId != value)
                {
                    OnConditionIdChanging(value);
                    ReportPropertyChanging("ConditionId");
                    _ConditionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConditionId");
                    OnConditionIdChanged();
                }
            }
        }
        private global::System.Int32 _ConditionId;
        partial void OnConditionIdChanging(global::System.Int32 value);
        partial void OnConditionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConditionName
        {
            get
            {
                return _ConditionName;
            }
            set
            {
                OnConditionNameChanging(value);
                ReportPropertyChanging("ConditionName");
                _ConditionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConditionName");
                OnConditionNameChanged();
            }
        }
        private global::System.String _ConditionName;
        partial void OnConditionNameChanging(global::System.String value);
        partial void OnConditionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SDACModel", "FK_Condition", "Flag")]
        public EntityCollection<Flag> Flags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Flag>("SDACModel.FK_Condition", "Flag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Flag>("SDACModel.FK_Condition", "Flag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SDACModel", Name="DataElement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataElement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataElement object.
        /// </summary>
        /// <param name="dataElementId">Initial value of the DataElementId property.</param>
        /// <param name="dataDomain">Initial value of the DataDomain property.</param>
        /// <param name="entity">Initial value of the Entity property.</param>
        /// <param name="fieldName">Initial value of the FieldName property.</param>
        /// <param name="dataType">Initial value of the DataType property.</param>
        /// <param name="sampleData">Initial value of the SampleData property.</param>
        public static DataElement CreateDataElement(global::System.Int32 dataElementId, global::System.String dataDomain, global::System.String entity, global::System.String fieldName, global::System.String dataType, global::System.String sampleData)
        {
            DataElement dataElement = new DataElement();
            dataElement.DataElementId = dataElementId;
            dataElement.DataDomain = dataDomain;
            dataElement.Entity = entity;
            dataElement.FieldName = fieldName;
            dataElement.DataType = dataType;
            dataElement.SampleData = sampleData;
            return dataElement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataElementId
        {
            get
            {
                return _DataElementId;
            }
            set
            {
                if (_DataElementId != value)
                {
                    OnDataElementIdChanging(value);
                    ReportPropertyChanging("DataElementId");
                    _DataElementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DataElementId");
                    OnDataElementIdChanged();
                }
            }
        }
        private global::System.Int32 _DataElementId;
        partial void OnDataElementIdChanging(global::System.Int32 value);
        partial void OnDataElementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataDomain
        {
            get
            {
                return _DataDomain;
            }
            set
            {
                OnDataDomainChanging(value);
                ReportPropertyChanging("DataDomain");
                _DataDomain = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataDomain");
                OnDataDomainChanged();
            }
        }
        private global::System.String _DataDomain;
        partial void OnDataDomainChanging(global::System.String value);
        partial void OnDataDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Entity
        {
            get
            {
                return _Entity;
            }
            set
            {
                OnEntityChanging(value);
                ReportPropertyChanging("Entity");
                _Entity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Entity");
                OnEntityChanged();
            }
        }
        private global::System.String _Entity;
        partial void OnEntityChanging(global::System.String value);
        partial void OnEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SampleData
        {
            get
            {
                return _SampleData;
            }
            set
            {
                OnSampleDataChanging(value);
                ReportPropertyChanging("SampleData");
                _SampleData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SampleData");
                OnSampleDataChanged();
            }
        }
        private global::System.String _SampleData;
        partial void OnSampleDataChanging(global::System.String value);
        partial void OnSampleDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalField
        {
            get
            {
                return _ExternalField;
            }
            set
            {
                OnExternalFieldChanging(value);
                ReportPropertyChanging("ExternalField");
                _ExternalField = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalField");
                OnExternalFieldChanged();
            }
        }
        private global::System.String _ExternalField;
        partial void OnExternalFieldChanging(global::System.String value);
        partial void OnExternalFieldChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SDACModel", "FK_DataElementId", "Flag")]
        public EntityCollection<Flag> Flags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Flag>("SDACModel.FK_DataElementId", "Flag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Flag>("SDACModel.FK_DataElementId", "Flag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SDACModel", Name="ErrorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ErrorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ErrorLog object.
        /// </summary>
        /// <param name="errorLogId">Initial value of the ErrorLogId property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        /// <param name="errorcode">Initial value of the Errorcode property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="stacktrace">Initial value of the Stacktrace property.</param>
        /// <param name="identifiedDate">Initial value of the IdentifiedDate property.</param>
        public static ErrorLog CreateErrorLog(global::System.Int32 errorLogId, global::System.String source, global::System.String errorcode, global::System.String description, global::System.String stacktrace, global::System.DateTime identifiedDate)
        {
            ErrorLog errorLog = new ErrorLog();
            errorLog.ErrorLogId = errorLogId;
            errorLog.Source = source;
            errorLog.Errorcode = errorcode;
            errorLog.Description = description;
            errorLog.Stacktrace = stacktrace;
            errorLog.IdentifiedDate = identifiedDate;
            return errorLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ErrorLogId
        {
            get
            {
                return _ErrorLogId;
            }
            set
            {
                if (_ErrorLogId != value)
                {
                    OnErrorLogIdChanging(value);
                    ReportPropertyChanging("ErrorLogId");
                    _ErrorLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ErrorLogId");
                    OnErrorLogIdChanged();
                }
            }
        }
        private global::System.Int32 _ErrorLogId;
        partial void OnErrorLogIdChanging(global::System.Int32 value);
        partial void OnErrorLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Errorcode
        {
            get
            {
                return _Errorcode;
            }
            set
            {
                OnErrorcodeChanging(value);
                ReportPropertyChanging("Errorcode");
                _Errorcode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Errorcode");
                OnErrorcodeChanged();
            }
        }
        private global::System.String _Errorcode;
        partial void OnErrorcodeChanging(global::System.String value);
        partial void OnErrorcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Stacktrace
        {
            get
            {
                return _Stacktrace;
            }
            set
            {
                OnStacktraceChanging(value);
                ReportPropertyChanging("Stacktrace");
                _Stacktrace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Stacktrace");
                OnStacktraceChanged();
            }
        }
        private global::System.String _Stacktrace;
        partial void OnStacktraceChanging(global::System.String value);
        partial void OnStacktraceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IdentifiedDate
        {
            get
            {
                return _IdentifiedDate;
            }
            set
            {
                OnIdentifiedDateChanging(value);
                ReportPropertyChanging("IdentifiedDate");
                _IdentifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdentifiedDate");
                OnIdentifiedDateChanged();
            }
        }
        private global::System.DateTime _IdentifiedDate;
        partial void OnIdentifiedDateChanging(global::System.DateTime value);
        partial void OnIdentifiedDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SDACModel", Name="Flag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Flag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Flag object.
        /// </summary>
        /// <param name="flagId">Initial value of the FlagId property.</param>
        /// <param name="flagName">Initial value of the FlagName property.</param>
        /// <param name="flagDescription">Initial value of the FlagDescription property.</param>
        /// <param name="isPublic">Initial value of the IsPublic property.</param>
        /// <param name="dataElementId">Initial value of the DataElementId property.</param>
        /// <param name="conditionId">Initial value of the ConditionId property.</param>
        /// <param name="valueSet1">Initial value of the ValueSet1 property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isFavorite">Initial value of the IsFavorite property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static Flag CreateFlag(global::System.Int32 flagId, global::System.String flagName, global::System.String flagDescription, global::System.Boolean isPublic, global::System.Int32 dataElementId, global::System.Int32 conditionId, global::System.String valueSet1, global::System.String userId, global::System.Boolean isFavorite, global::System.String createdBy, global::System.DateTime createdDate, global::System.String modifiedBy, global::System.DateTime modifiedDate)
        {
            Flag flag = new Flag();
            flag.FlagId = flagId;
            flag.FlagName = flagName;
            flag.FlagDescription = flagDescription;
            flag.IsPublic = isPublic;
            flag.DataElementId = dataElementId;
            flag.ConditionId = conditionId;
            flag.ValueSet1 = valueSet1;
            flag.UserId = userId;
            flag.IsFavorite = isFavorite;
            flag.CreatedBy = createdBy;
            flag.CreatedDate = createdDate;
            flag.ModifiedBy = modifiedBy;
            flag.ModifiedDate = modifiedDate;
            return flag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlagId
        {
            get
            {
                return _FlagId;
            }
            set
            {
                if (_FlagId != value)
                {
                    OnFlagIdChanging(value);
                    ReportPropertyChanging("FlagId");
                    _FlagId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FlagId");
                    OnFlagIdChanged();
                }
            }
        }
        private global::System.Int32 _FlagId;
        partial void OnFlagIdChanging(global::System.Int32 value);
        partial void OnFlagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlagName
        {
            get
            {
                return _FlagName;
            }
            set
            {
                OnFlagNameChanging(value);
                ReportPropertyChanging("FlagName");
                _FlagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FlagName");
                OnFlagNameChanged();
            }
        }
        private global::System.String _FlagName;
        partial void OnFlagNameChanging(global::System.String value);
        partial void OnFlagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlagDescription
        {
            get
            {
                return _FlagDescription;
            }
            set
            {
                OnFlagDescriptionChanging(value);
                ReportPropertyChanging("FlagDescription");
                _FlagDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FlagDescription");
                OnFlagDescriptionChanged();
            }
        }
        private global::System.String _FlagDescription;
        partial void OnFlagDescriptionChanging(global::System.String value);
        partial void OnFlagDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private global::System.Boolean _IsPublic;
        partial void OnIsPublicChanging(global::System.Boolean value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataElementId
        {
            get
            {
                return _DataElementId;
            }
            set
            {
                OnDataElementIdChanging(value);
                ReportPropertyChanging("DataElementId");
                _DataElementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataElementId");
                OnDataElementIdChanged();
            }
        }
        private global::System.Int32 _DataElementId;
        partial void OnDataElementIdChanging(global::System.Int32 value);
        partial void OnDataElementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConditionId
        {
            get
            {
                return _ConditionId;
            }
            set
            {
                OnConditionIdChanging(value);
                ReportPropertyChanging("ConditionId");
                _ConditionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConditionId");
                OnConditionIdChanged();
            }
        }
        private global::System.Int32 _ConditionId;
        partial void OnConditionIdChanging(global::System.Int32 value);
        partial void OnConditionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ValueSet1
        {
            get
            {
                return _ValueSet1;
            }
            set
            {
                OnValueSet1Changing(value);
                ReportPropertyChanging("ValueSet1");
                _ValueSet1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ValueSet1");
                OnValueSet1Changed();
            }
        }
        private global::System.String _ValueSet1;
        partial void OnValueSet1Changing(global::System.String value);
        partial void OnValueSet1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValueSet2
        {
            get
            {
                return _ValueSet2;
            }
            set
            {
                OnValueSet2Changing(value);
                ReportPropertyChanging("ValueSet2");
                _ValueSet2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValueSet2");
                OnValueSet2Changed();
            }
        }
        private global::System.String _ValueSet2;
        partial void OnValueSet2Changing(global::System.String value);
        partial void OnValueSet2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFavorite
        {
            get
            {
                return _IsFavorite;
            }
            set
            {
                OnIsFavoriteChanging(value);
                ReportPropertyChanging("IsFavorite");
                _IsFavorite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFavorite");
                OnIsFavoriteChanged();
            }
        }
        private global::System.Boolean _IsFavorite;
        partial void OnIsFavoriteChanging(global::System.Boolean value);
        partial void OnIsFavoriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SDACModel", "FK_Condition", "Condition")]
        public Condition Condition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Condition>("SDACModel.FK_Condition", "Condition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Condition>("SDACModel.FK_Condition", "Condition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Condition> ConditionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Condition>("SDACModel.FK_Condition", "Condition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Condition>("SDACModel.FK_Condition", "Condition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SDACModel", "FK_DataElementId", "DataElement")]
        public DataElement DataElement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataElement>("SDACModel.FK_DataElementId", "DataElement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataElement>("SDACModel.FK_DataElementId", "DataElement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataElement> DataElementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataElement>("SDACModel.FK_DataElementId", "DataElement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataElement>("SDACModel.FK_DataElementId", "DataElement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SDACModel", "FK_rel2", "FlagAggregateFlag")]
        public EntityCollection<FlagAggregateFlag> FlagAggregateFlags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlagAggregateFlag>("SDACModel.FK_rel2", "FlagAggregateFlag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlagAggregateFlag>("SDACModel.FK_rel2", "FlagAggregateFlag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SDACModel", "FK_UserFlagAssociation_Flag", "UserFlagAssociation")]
        public EntityCollection<UserFlagAssociation> UserFlagAssociations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserFlagAssociation>("SDACModel.FK_UserFlagAssociation_Flag", "UserFlagAssociation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserFlagAssociation>("SDACModel.FK_UserFlagAssociation_Flag", "UserFlagAssociation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SDACModel", Name="FlagAggregateFlag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FlagAggregateFlag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlagAggregateFlag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="aggregateFlagId">Initial value of the AggregateFlagId property.</param>
        /// <param name="flagId">Initial value of the FlagId property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static FlagAggregateFlag CreateFlagAggregateFlag(global::System.Int32 id, global::System.Int32 aggregateFlagId, global::System.Int32 flagId, global::System.String createdBy, global::System.DateTime createdDate, global::System.String modifiedBy, global::System.DateTime modifiedDate)
        {
            FlagAggregateFlag flagAggregateFlag = new FlagAggregateFlag();
            flagAggregateFlag.Id = id;
            flagAggregateFlag.AggregateFlagId = aggregateFlagId;
            flagAggregateFlag.FlagId = flagId;
            flagAggregateFlag.CreatedBy = createdBy;
            flagAggregateFlag.CreatedDate = createdDate;
            flagAggregateFlag.ModifiedBy = modifiedBy;
            flagAggregateFlag.ModifiedDate = modifiedDate;
            return flagAggregateFlag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggregateFlagId
        {
            get
            {
                return _AggregateFlagId;
            }
            set
            {
                OnAggregateFlagIdChanging(value);
                ReportPropertyChanging("AggregateFlagId");
                _AggregateFlagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AggregateFlagId");
                OnAggregateFlagIdChanged();
            }
        }
        private global::System.Int32 _AggregateFlagId;
        partial void OnAggregateFlagIdChanging(global::System.Int32 value);
        partial void OnAggregateFlagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlagId
        {
            get
            {
                return _FlagId;
            }
            set
            {
                OnFlagIdChanging(value);
                ReportPropertyChanging("FlagId");
                _FlagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlagId");
                OnFlagIdChanged();
            }
        }
        private global::System.Int32 _FlagId;
        partial void OnFlagIdChanging(global::System.Int32 value);
        partial void OnFlagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SDACModel", "FK_rel1", "AggregateFlag")]
        public AggregateFlag AggregateFlag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AggregateFlag>("SDACModel.FK_rel1", "AggregateFlag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AggregateFlag>("SDACModel.FK_rel1", "AggregateFlag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AggregateFlag> AggregateFlagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AggregateFlag>("SDACModel.FK_rel1", "AggregateFlag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AggregateFlag>("SDACModel.FK_rel1", "AggregateFlag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SDACModel", "FK_rel2", "Flag")]
        public Flag Flag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flag>("SDACModel.FK_rel2", "Flag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flag>("SDACModel.FK_rel2", "Flag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flag> FlagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flag>("SDACModel.FK_rel2", "Flag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flag>("SDACModel.FK_rel2", "Flag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SDACModel", Name="PublicFavorite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PublicFavorite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PublicFavorite object.
        /// </summary>
        /// <param name="publicPrivateId">Initial value of the PublicPrivateId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static PublicFavorite CreatePublicFavorite(global::System.Int32 publicPrivateId, global::System.String userId)
        {
            PublicFavorite publicFavorite = new PublicFavorite();
            publicFavorite.PublicPrivateId = publicPrivateId;
            publicFavorite.UserId = userId;
            return publicFavorite;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PublicPrivateId
        {
            get
            {
                return _PublicPrivateId;
            }
            set
            {
                if (_PublicPrivateId != value)
                {
                    OnPublicPrivateIdChanging(value);
                    ReportPropertyChanging("PublicPrivateId");
                    _PublicPrivateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PublicPrivateId");
                    OnPublicPrivateIdChanged();
                }
            }
        }
        private global::System.Int32 _PublicPrivateId;
        partial void OnPublicPrivateIdChanging(global::System.Int32 value);
        partial void OnPublicPrivateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FlagId
        {
            get
            {
                return _FlagId;
            }
            set
            {
                OnFlagIdChanging(value);
                ReportPropertyChanging("FlagId");
                _FlagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlagId");
                OnFlagIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FlagId;
        partial void OnFlagIdChanging(Nullable<global::System.Int32> value);
        partial void OnFlagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAggregate
        {
            get
            {
                return _IsAggregate;
            }
            set
            {
                OnIsAggregateChanging(value);
                ReportPropertyChanging("IsAggregate");
                _IsAggregate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAggregate");
                OnIsAggregateChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAggregate;
        partial void OnIsAggregateChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAggregateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SDACModel", Name="UserFlagAssociation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserFlagAssociation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserFlagAssociation object.
        /// </summary>
        /// <param name="userFlagAssociationId">Initial value of the UserFlagAssociationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="flagId">Initial value of the FlagId property.</param>
        public static UserFlagAssociation CreateUserFlagAssociation(global::System.Int32 userFlagAssociationId, global::System.String userId, global::System.Int32 flagId)
        {
            UserFlagAssociation userFlagAssociation = new UserFlagAssociation();
            userFlagAssociation.UserFlagAssociationId = userFlagAssociationId;
            userFlagAssociation.UserId = userId;
            userFlagAssociation.FlagId = flagId;
            return userFlagAssociation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserFlagAssociationId
        {
            get
            {
                return _UserFlagAssociationId;
            }
            set
            {
                if (_UserFlagAssociationId != value)
                {
                    OnUserFlagAssociationIdChanging(value);
                    ReportPropertyChanging("UserFlagAssociationId");
                    _UserFlagAssociationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserFlagAssociationId");
                    OnUserFlagAssociationIdChanged();
                }
            }
        }
        private global::System.Int32 _UserFlagAssociationId;
        partial void OnUserFlagAssociationIdChanging(global::System.Int32 value);
        partial void OnUserFlagAssociationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlagId
        {
            get
            {
                return _FlagId;
            }
            set
            {
                OnFlagIdChanging(value);
                ReportPropertyChanging("FlagId");
                _FlagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlagId");
                OnFlagIdChanged();
            }
        }
        private global::System.Int32 _FlagId;
        partial void OnFlagIdChanging(global::System.Int32 value);
        partial void OnFlagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPublic;
        partial void OnIsPublicChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Isfavorite
        {
            get
            {
                return _Isfavorite;
            }
            set
            {
                OnIsfavoriteChanging(value);
                ReportPropertyChanging("Isfavorite");
                _Isfavorite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Isfavorite");
                OnIsfavoriteChanged();
            }
        }
        private Nullable<global::System.Boolean> _Isfavorite;
        partial void OnIsfavoriteChanging(Nullable<global::System.Boolean> value);
        partial void OnIsfavoriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAggregate
        {
            get
            {
                return _IsAggregate;
            }
            set
            {
                OnIsAggregateChanging(value);
                ReportPropertyChanging("IsAggregate");
                _IsAggregate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAggregate");
                OnIsAggregateChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAggregate;
        partial void OnIsAggregateChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAggregateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedDate
        {
            get
            {
                return _DeletedDate;
            }
            set
            {
                OnDeletedDateChanging(value);
                ReportPropertyChanging("DeletedDate");
                _DeletedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDate");
                OnDeletedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedDate;
        partial void OnDeletedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SDACModel", "FK_UserFlagAssociation_Flag", "Flag")]
        public Flag Flag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flag>("SDACModel.FK_UserFlagAssociation_Flag", "Flag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flag>("SDACModel.FK_UserFlagAssociation_Flag", "Flag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flag> FlagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flag>("SDACModel.FK_UserFlagAssociation_Flag", "Flag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flag>("SDACModel.FK_UserFlagAssociation_Flag", "Flag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SDACModel", Name="UserLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLog object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        /// <param name="loginDate">Initial value of the LoginDate property.</param>
        /// <param name="logoutDate">Initial value of the LogoutDate property.</param>
        public static UserLog CreateUserLog(global::System.String userId, global::System.String name, global::System.String role, global::System.DateTime loginDate, global::System.DateTime logoutDate)
        {
            UserLog userLog = new UserLog();
            userLog.UserId = userId;
            userLog.Name = name;
            userLog.Role = role;
            userLog.LoginDate = loginDate;
            userLog.LogoutDate = logoutDate;
            return userLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                if (_Role != value)
                {
                    OnRoleChanging(value);
                    ReportPropertyChanging("Role");
                    _Role = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Role");
                    OnRoleChanged();
                }
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoginDate
        {
            get
            {
                return _LoginDate;
            }
            set
            {
                if (_LoginDate != value)
                {
                    OnLoginDateChanging(value);
                    ReportPropertyChanging("LoginDate");
                    _LoginDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoginDate");
                    OnLoginDateChanged();
                }
            }
        }
        private global::System.DateTime _LoginDate;
        partial void OnLoginDateChanging(global::System.DateTime value);
        partial void OnLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LogoutDate
        {
            get
            {
                return _LogoutDate;
            }
            set
            {
                if (_LogoutDate != value)
                {
                    OnLogoutDateChanging(value);
                    ReportPropertyChanging("LogoutDate");
                    _LogoutDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogoutDate");
                    OnLogoutDateChanged();
                }
            }
        }
        private global::System.DateTime _LogoutDate;
        partial void OnLogoutDateChanging(global::System.DateTime value);
        partial void OnLogoutDateChanged();

        #endregion
    
    }

    #endregion
    
}
